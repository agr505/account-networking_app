/*global fetch*/
/*jshint node:true*/
'use strict';

var debug = require('debug')('next-beacon-node-client-debug');
var merge = require('lodash.merge');
require('es6-promise').polyfill();
require('isomorphic-fetch');

var beaconDefaults = {
	user: {
		version: 1,
		erights: 'unknown',
		isStaff: 'unknown',
		flags: 'unknown'
	},
	page: {
		location: {
			pathname: 'unknown'
		}
	}
};

var Beacon = function (url) {
	if (!url) {
		throw new Error('Expected beacon URL');
	}

	this.url = url;
};

Beacon.prototype.fire = function (eventType, event, cookie) {

	debug('Beacon data: ' + JSON.stringify(beaconData));

	if (!eventType) {
		throw new Error('Expected event type');
	}

	if (process.env.NODE_ENV !== 'production') {
		return debug('Beacons only fire in prod');
	}

	var beaconData = merge({}, beaconDefaults, event);

	debug('Beacon %s | %s | %s', cookie, this.url + eventType + '?data=', JSON.stringify(beaconData));

	return fetch(this.url + eventType + '?data=' + encodeURIComponent(JSON.stringify(beaconData)),
			{ headers: { cookie: cookie || ''}}
		)
		.then(function(response) {
			debug('Sent beacon; response status: ' + response.status);
			return response;
		})
		.catch(function (error) {
			debug('Error sending beacon; error: ' + error);
		});
};

module.exports = Beacon;
