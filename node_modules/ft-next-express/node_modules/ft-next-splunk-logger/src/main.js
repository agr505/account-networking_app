'use strict';
var path = require('path');
var fork = require('child_process').fork;
var format = require('./format');
var util = require('util');

var splunkUrl = process.env.SPLUNK_URL;

if(!splunkUrl){
	console.log('No SPLUNK_URL found, fallback to debug mode.  All splunk logs will be printed to stdout, NOT sent to splunk');
	splunkUrl = 'DEBUG';
}

var agent;


function loggerFactory(name){
	if(!agent){
		agent = fork(path.resolve(__dirname, './agent.js'), {env:process.env,cwd:process.cwd()});
	}

	return function(){
		var logmessage = format([].slice.call(arguments,0));
		agent.send(util.format('%s %s', name, logmessage));
	};
}

function noOpLogFactory(){
	return function(){};
}

function debugLogFactory(name, stubConsole){
	var consoleLog = stubConsole && stubConsole.log ? stubConsole.log : console.log;
	return function(){
		var log = format([].slice.call(arguments,0));
		var time = new Date().toISOString();
		consoleLog(util.format('%s %s %s', name, time, log));
	};
}

switch(splunkUrl.toLowerCase()){
	case 'nolog':
		module.exports = noOpLogFactory;
		break;
	case 'debug':
		module.exports = debugLogFactory;
		break;
	default:
		module.exports = loggerFactory;
		break;
}
