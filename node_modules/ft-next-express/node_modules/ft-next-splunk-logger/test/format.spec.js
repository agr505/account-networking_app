'use strict';
/*global describe, it*/
var expect = require('chai').expect;
var format = require('../src/format');

describe('Log Formatting', function(){

	it('Should work like util.format if the first arg is a string', function(){
		var logStr = 'this is a %s: %j';
		var obj = {foo:'bar'};
		var expected = 'this is a message: {"foo":"bar"}';
		var result = format([logStr, 'message', obj]);
		expect(result).to.equal(expected);
	});

	it('Should format an object to be splunk-friendly', function(){
		var obj = {foo:'message=with a "space"'};
		var expected = 'foo="message with a \'space\'"';
		var result = format([obj]);
		expect(result).to.equal(expected);
	});

	it('Should also be able to insert splunk-friendly object data', function(){
		var str = 'Some object data: %o';
		var obj = {foo:'message=with a "space"'};
		var expected = 'Some object data: foo="message with a \'space\'"';
		var result = format([str, obj]);
		expect(result).to.equal(expected);
	});

	describe('Regression', function(){

		it('Should be able to cope with an undefined arg', function(){
			var str = 'Some object data: %o';
			var expected = 'Some object data: undefined';
			var result = format([str, undefined]);
			expect(result).to.equal(expected);
		});
	});
});
