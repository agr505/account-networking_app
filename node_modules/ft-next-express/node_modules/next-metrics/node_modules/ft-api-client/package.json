{
  "name": "ft-api-client",
  "version": "3.4.3",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Financial-Times/ft-api-client.git"
  },
  "scripts": {
    "test": "grunt"
  },
  "license": "BSD",
  "description": "A client for the Financial Times content and search APIs",
  "main": "./lib/api",
  "directories": {
    "lib": "./lib"
  },
  "dependencies": {
    "cheerio": "^0.17.0",
    "debug": "^2.0.0",
    "lodash": "^2.4.1",
    "lru-cache": "^2.5.0",
    "request": "2.22.0",
    "es6-promise": "^1.0.0"
  },
  "devDependencies": {
    "chai": "^1.9.1",
    "grunt": "0.4.1",
    "grunt-cli": "^0.1.13",
    "grunt-contrib-jshint": "0.10.0",
    "grunt-contrib-watch": "0.4.4",
    "grunt-jasmine-node": "0.1.0",
    "jshint": "2.5.0",
    "mocha": "^1.21.4",
    "nock": "^0.47.0",
    "sinon": "^1.10.3"
  },
  "keywords": [
    "FT",
    "Financial",
    "Times",
    "CAPI",
    "API",
    "SAPI"
  ],
  "contributors": [
    {
      "name": "Richard Still",
      "email": "richard.still@ft.com"
    },
    {
      "name": "Sebastian Wolf",
      "email": "sebastian.wolf@ft.com"
    },
    {
      "name": "James Nicholls",
      "email": "james.nicholls@ft.com"
    },
    {
      "name": "Arjun Gadhia",
      "email": "arjun.gadhia@ft.com"
    }
  ],
  "readme": "# FT API Node Client\r\n\r\nThis is a node module that acts as a wrapper for the FT content api (<https://developer.ft.com>).\r\n\r\n\r\n## Setup\r\n\r\n```shell\r\nnpm install https://github.com/Financial-Times/ft-api-client/archive/v{the version you need}.tar.gz\r\n```\r\n\r\n```javascript\r\nvar client = require('ft-api-client')(apiKey, config);\r\n```\r\n\r\nWhere `config is an optional object accepting two properties\r\n\r\n- `timeout` - maximum time (in ms) to wait for requests to complete\r\n- `errorHandler` - function used to handle any errors resulting from any single api call (including the construction of models). The default handler logs to the console when `export DEBUG=ft-api-client:*;` is set.\r\n- `elasticSearchKey` - The API key used when communicating with elastic search\r\n\r\n\r\n### Articles\r\n\r\nThen,\r\n\r\n    client\r\n      .get('03b49444-16c9-11e3-bced-00144feabdc0')\r\n      .then(function (article) {\r\n        console.log(article.id);\r\n        console.log(article.largestImage);\r\n      }, function (err) {\r\n        console.error(err);\r\n      });\r\n\r\nOr you can get several resources in a single request,\r\n\r\n    client\r\n      .get([\r\n          '03b49444-16c9-11e3-bced-00144feabdc0',\r\n          '7d9ee96e-3a70-11e4-bd08-00144feabdc0',\r\n          'a7008958-f2f3-11e3-a3f8-00144feabdc0'\r\n        ])\r\n      .then(function (articles) {\r\n        console.log(articles);\r\n      })\r\n\r\nAlternatively use the new `mget` method in exactly the same way. To use `megt` you need to pass a `elasticSearchKey` property and value into the configuration\r\n\r\n### Search \r\n\r\nOr retrieve a collection of articles via a search term,\r\n\r\n    client\r\n      .search(\"Climate change\")\r\n      .then(function (articles) {\r\n        console.log(articles);\r\n      })\r\n\r\nTo request more results than the default (`5`) pass in a second parameter with the number required.\r\n\r\n### options\r\n\r\n`.get()` and `.search()` also accepts an optional second parameter, `opts` with the following properties\r\n\r\n - `strict` - By default if a sub-promise of a request for multiple articles is rejected it will, after it is handled by `config.errorHandler`, be forced to resolve with `undefined`. This means e.g. `Promise.all(client.get(ids, {alwaysResolve: true}))` can reliably be used when the success of *every* call is not essential. If `strict: true`, then the prmoise will stay in its rejected state. \r\n - `quantity` (only applies to search) - max number of results to return (default 5)\r\n - `resultContext` (only applies to search) - Overrides the [default `resultContext` config](https://github.com/Financial-Times/ft-api-client/blob/v3/lib/v1/search.js#L4) sent to the search api. Each property in this object will override the default. For properties which are arrays, prefixing the property name with '+' will concatenate with the default set e.g. `'+aspects': ['example']` will add `'example'` to the default list of aspects. \r\n\r\n## Development\r\n\r\nInstall the dependencies,\r\n\r\n    npm install\r\n\r\nCheck everything works,\r\n\r\n    make test\r\n\r\nRoll up your sleeves and dive in. New features will not be accepted without accompanying tests.",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/Financial-Times/ft-api-client/issues"
  },
  "homepage": "https://github.com/Financial-Times/ft-api-client#readme",
  "_id": "ft-api-client@3.4.3",
  "_shasum": "0bc6af9882e58f9d06abd8a44c1fa77728df725f",
  "_resolved": "https://github.com/Financial-Times/ft-api-client/archive/emit-events.tar.gz",
  "_from": "https://github.com/Financial-Times/ft-api-client/archive/emit-events.tar.gz"
}
